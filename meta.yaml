# GPU variant, builds GPU variants of libxgboost and py-xgboost packages
{% set name = "xgboost" %}
{% set version = "0.82" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # Rename this to dummy since we don't want CB to extract it
  fn: xgboost-{{ version }}-py3-none-any.whl.dummy                                            # [linux]
  url: https://files.pythonhosted.org/packages/6a/49/7e10686647f741bd9c8918b0decdb94135b542fe372ca1100739b8529503/xgboost-0.82-py2.py3-none-manylinux1_x86_64.whl  # [linux]
  sha256: 50619aa6ade391fe0584ff1c9011451cd0c570fcedf94e6d7b3eaa324cb0db31                    # [linux]
  #git_url: https://github.com/dmlc/xgboost
  # corresponds to 0.90 tag
  #git_tag: 3f83dcd50286d7c8d22e552942bd6572547c32b9
  #patches:
    # xgboost patches
  #  - 0001-conda-Unbundle-libxgboost.-dll-dylib-so.patch
  #  - 0002-Fix-R-package-PKGROOT.patch
  #  - 0003-Fix-R-package-mingw-w64-compiler-flags-remove-m64.patch
  #  - 0004-Fix-configure-check-for-OpenMP-on-macOS.patch
  #  - 0005-Add-ADD_-FLAGS-to-end-of-commandlines.patch

build:
  skip: true  # [not linux64 and not win64]
  number: 4

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - git
    - make  # [linux]
  host:
    - cudatoolkit {{ cudatoolkit }}*

outputs:
  - name: libxgboost
    script: install-libxgboost.sh   # [linux]
    script: install-libxgboost.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - git
        - make
      host:
        - cudatoolkit {{ cudatoolkit }}*
      run:
        - {{ pin_compatible('cudatoolkit', max_pin='x.x') }}

  - name: _py-xgboost-mutex
    version: 1.0
    build:
      string: gpu_0

  - name: py-xgboost
    script: install-py-xgboost.sh  # [linux]
    script: install-py-xgboost.sh  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      host:
        - {{ pin_subpackage('libxgboost', exact=True) }}
        - cudatoolkit {{ cudatoolkit }}*
        - python
        - setuptools
      run:
        - {{ pin_subpackage('libxgboost', exact=True) }}
        - {{ pin_subpackage('_py-xgboost-mutex', exact=True) }}
        - {{ pin_compatible('cudatoolkit', max_pin='x.x') }}
        - python
        - numpy
        - scipy
        - scikit-learn
    test:
      requires:
        - pandas
      script: test-py-xgboost.py

  - name: py-xgboost-gpu
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('py-xgboost', exact=True) }}
    # present to include cuda version in hash
    extra:
      toolkitused: {{ cudatoolkit }}
